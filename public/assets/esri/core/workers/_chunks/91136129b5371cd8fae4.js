self.webpackChunkRemoteClient([79],{190:function(e,a,t){"use strict";t.r(a),t.d(a,"fromItem",(function(){return o})),t.d(a,"selectLayerClassPath",(function(){return y}));var n=t(2),r=t(10),l=t(5),i=t(43),u=t(117),s=t(418),c=t(268);function o(e){return!e.portalItem||e.portalItem instanceof u.default||(e={...e,portalItem:new u.default(e.portalItem)}),(a=e.portalItem,a.load().then(y).then(d)).then(a=>{const t={portalItem:e.portalItem,...a.properties},n=a.constructor;return Object(l.r)(new n(t))});var a}function y(e){switch(e.type){case"Map Service":return function(e){return function(e){return p(e.url).then(e=>e.tileInfo)}(e).then(e=>e?{className:"TileLayer"}:{className:"MapImageLayer"})}(e);case"Feature Service":return function(e){return f(e).then(e=>{if("object"==typeof e){const a={};return null!=e.id&&(a.layerId=e.id),{className:"FeatureLayer",properties:a}}return{className:"GroupLayer"}})}(e);case"Feature Collection":return async function(e){return await e.load(),Object(s.a)(e,"Map Notes")?{className:"MapNotesLayer"}:Object(s.a)(e,"Route Layer")?{className:"RouteLayer"}:1===h(await e.fetchData())?{className:"FeatureLayer"}:{className:"GroupLayer"}}(e);case"Scene Service":return function(e){return f(e).then(a=>{if("object"==typeof a){const t={};let n;if(null!=a.id?(t.layerId=a.id,n=`${e.url}/layers/${a.id}`):n=e.url,Array.isArray(e.typeKeywords)&&e.typeKeywords.length>0){const a={IntegratedMesh:"IntegratedMeshLayer","3DObject":"SceneLayer",Point:"SceneLayer",PointCloud:"PointCloudLayer",Building:"BuildingSceneLayer"};for(const t of Object.keys(a))if(-1!==e.typeKeywords.indexOf(t))return{className:a[t]}}return p(n).then(e=>{let a="SceneLayer";const n={Point:"SceneLayer","3DObject":"SceneLayer",IntegratedMesh:"IntegratedMeshLayer",PointCloud:"PointCloudLayer",Building:"BuildingSceneLayer"};return e&&e.layerType&&n[e.layerType]&&(a=n[e.layerType]),{className:a,properties:t}})}return{className:"GroupLayer"}})}(e);case"Image Service":return async function(e){var a,t,n;await e.load();const r=null!=(a=null==(t=e.typeKeywords)?void 0:t.map(e=>e.toLowerCase()))?a:[];if(r.indexOf("elevation 3d layer")>-1)return{className:"ElevationLayer"};if(r.indexOf("tiled imagery")>-1)return{className:"ImageryTileLayer"};const l=await e.fetchData(),i=null==l?void 0:l.layerType;if("ArcGISTiledImageServiceLayer"===i)return{className:"ImageryTileLayer"};if("ArcGISImageServiceLayer"===i)return{className:"ImageryLayer"};return"map"===(null==(n=(await p(e.url)).cacheType)?void 0:n.toLowerCase())?{className:"ImageryTileLayer"}:{className:"ImageryLayer"}}(e);case"Stream Service":return{className:"StreamLayer"};case"Vector Tile Service":return{className:"VectorTileLayer"};case"KML":return{className:"KMLLayer"};case"WMTS":return{className:"WMTSLayer"};case"WMS":return{className:"WMSLayer"};default:return Object(l.h)(new r.a("portal:unknown-item-type","Unknown item type '${type}'",{type:e.type}))}}function d(e){return(0,c.a[e.className])().then(a=>({constructor:a,properties:e.properties}))}function f(e){return!e.url||e.url.match(/\/\d+$/)?Object(l.r)({}):e.load().then(()=>e.fetchData()).then(a=>h(a)>0?m(a):p(e.url).then(m))}function m(e){return 1===h(e)&&{id:Object(n.m)(L(e))}}function L(e){const a=e.layers;if(a&&a.length)return a[0].id;const t=e.tables;return t&&t.length?t[0].id:null}function h(e){var a,t,n,r;return(null!=(a=null==e||null==(t=e.layers)?void 0:t.length)?a:0)+(null!=(n=null==e||null==(r=e.tables)?void 0:r.length)?n:0)}function p(e){return Object(i.default)(e,{responseType:"json",query:{f:"json"}}).then(e=>e.data)}},268:function(e,a,t){"use strict";t.d(a,"a",(function(){return n}));t(20);const n={BingMapsLayer:async()=>(await t.e(48).then(t.bind(null,453))).default,BuildingSceneLayer:async()=>(await Promise.all([t.e(1),t.e(2),t.e(17),t.e(73)]).then(t.bind(null,437))).default,CSVLayer:async()=>(await Promise.all([t.e(1),t.e(2),t.e(40)]).then(t.bind(null,454))).default,ElevationLayer:async()=>(await Promise.all([t.e(5),t.e(19)]).then(t.bind(null,447))).default,FeatureLayer:async()=>(await Promise.all([t.e(1),t.e(2),t.e(44)]).then(t.bind(null,173))).default,GroupLayer:async()=>(await Promise.all([t.e(20),t.e(143)]).then(t.bind(null,373))).default,GeoRSSLayer:async()=>(await t.e(51).then(t.bind(null,424))).default,ImageryLayer:async()=>(await Promise.all([t.e(9),t.e(18),t.e(36)]).then(t.bind(null,439))).default,ImageryTileLayer:async()=>(await Promise.all([t.e(5),t.e(9),t.e(18),t.e(74)]).then(t.bind(null,438))).default,IntegratedMeshLayer:async()=>(await Promise.all([t.e(24),t.e(45)]).then(t.bind(null,443))).default,KMLLayer:async()=>(await Promise.all([t.e(1),t.e(57)]).then(t.bind(null,449))).default,MapImageLayer:async()=>(await Promise.all([t.e(14),t.e(1),t.e(11),t.e(15),t.e(56)]).then(t.bind(null,436))).default,MapNotesLayer:async()=>(await Promise.all([t.e(1),t.e(2),t.e(42)]).then(t.bind(null,425))).default,OpenStreetMapLayer:async()=>(await Promise.all([t.e(12),t.e(197)]).then(t.bind(null,426))).default,PointCloudLayer:async()=>(await t.e(39).then(t.bind(null,440))).default,RouteLayer:async()=>(await Promise.all([t.e(1),t.e(2),t.e(43)]).then(t.bind(null,427))).default,SceneLayer:async()=>(await Promise.all([t.e(1),t.e(2),t.e(17),t.e(198)]).then(t.bind(null,455))).default,StreamLayer:async()=>(await Promise.all([t.e(1),t.e(38)]).then(t.bind(null,456))).default,TileLayer:async()=>(await Promise.all([t.e(1),t.e(5),t.e(11),t.e(58)]).then(t.bind(null,428))).default,UnknownLayer:async()=>(await t.e(67).then(t.bind(null,429))).default,UnsupportedLayer:async()=>(await t.e(68).then(t.bind(null,430))).default,VectorTileLayer:async()=>(await Promise.all([t.e(5),t.e(26),t.e(49)]).then(t.bind(null,441))).default,WebTileLayer:async()=>(await t.e(12).then(t.bind(null,316))).default,WMSLayer:async()=>(await t.e(41).then(t.bind(null,446))).default,WMTSLayer:async()=>(await Promise.all([t.e(12),t.e(142)]).then(t.bind(null,444))).default}},418:function(e,a,t){"use strict";function n(e,a){return!!e.typeKeywords&&e.typeKeywords.indexOf(a)>-1}t.d(a,"a",(function(){return n}))}});