self.webpackChunkRemoteClient([198],{455:function(e,t,r){"use strict";r.r(t);var i=r(24),a=(r(3),r(20),r(2)),o=r(7),s=(r(9),r(6)),n=r(26),l=r(68),c=r(25),p=r(10),d=r(4),y=(r(41),r(5)),u=r(43),b=(r(42),r(82)),h=r(131),f=r(99),j=r(101),O=r(46),g=(r(191),r(213),r(227),r(303),r(324),r(327),r(304),r(305)),m=(r(306),r(104)),v=r(135),I=r(85),w=r(118),L=r(111),S=r(136),F=r(285),_=r(179),T=r(355),x=r(356),E=r(404),P=r(265),D=r(168),A=r(108),R=r(423),U=r(325),q=r(527),N=r(65);let Q=class extends N.a{constructor(){super(...arguments),this.name=null,this.field=null,this.currentRangeExtent=null,this.fullRangeExtent=null,this.type="rangeInfo"}};Object(i.a)([Object(n.b)({type:String,json:{read:!0,write:!0}})],Q.prototype,"name",void 0),Object(i.a)([Object(n.b)({type:String,json:{read:!0,write:!0}})],Q.prototype,"field",void 0),Object(i.a)([Object(n.b)({type:[Number],json:{read:!0,write:!0}})],Q.prototype,"currentRangeExtent",void 0),Object(i.a)([Object(n.b)({type:[Number],json:{read:!0,write:!0}})],Q.prototype,"fullRangeExtent",void 0),Object(i.a)([Object(n.b)({type:["rangeInfo"],readOnly:!0,json:{read:!1,write:!0}})],Q.prototype,"type",void 0),Q=Object(i.a)([Object(c.a)("esri.layers.support.RangeInfo")],Q);var C=Q;const k=["3DObject","Point"],V=o.a.getLogger("esri.layers.SceneLayer"),K=Object(x.a)();let M=class extends(Object(U.a)(Object(v.a)(Object(w.a)(Object(L.a)(Object(S.a)(Object(j.a)(f.a))))))){constructor(...e){super(...e),this.featureReduction=null,this.rangeInfos=null,this.operationalLayerType="ArcGISSceneServiceLayer",this.type="scene",this.fields=null,this.outFields=null,this.nodePages=null,this.materialDefinitions=null,this.textureSetDefinitions=null,this.geometryDefinitions=null,this.serviceUpdateTimeStamp=null,this.definitionExpression=null,this.path=null,this.labelsVisible=!0,this.labelingInfo=null,this.legendEnabled=!0,this.cachedDrawingInfo={color:!1},this.popupEnabled=!0,this.popupTemplate=null,this.objectIdField=null,this.objectIdFilter=null,this._fieldUsageInfo={},this.screenSizePerspectiveEnabled=!0}normalizeCtorArgs(e,t){return"string"==typeof e?{url:e,...t}:e}getField(e){return this.fieldsIndex.get(e)}getFieldDomain(e){const t=this.getField(e);return t&&t.domain?t.domain:null}get fieldsIndex(){return new m.a(this.fields)}readNodePages(e,t,r){return"Point"===t.layerType&&(e=t.pointNodePages),null==e||"object"!=typeof e?null:R.c.fromJSON(e,r)}set elevationInfo(e){this._set("elevationInfo",e),this.loaded&&this._validateElevationInfo()}get geometryType(){return z[this.profile]||"mesh"}set renderer(e){Object(b.f)(e,this.fields),this._set("renderer",e)}readCachedDrawingInfo(e){return null!=e&&"object"==typeof e||(e={}),null==e.color&&(e.color=!1),e}get defaultPopupTemplate(){return Object(a.h)(this.associatedLayer)||this.attributeStorageInfo?this.createPopupTemplate():null}readObjectIdField(e,t){return!e&&t.fields&&t.fields.some(t=>("esriFieldTypeOID"===t.type&&(e=t.name),!!e)),e||void 0}readProfile(e,t){const r=t.store.profile;return null!=r&&G[r]?G[r]:(V.error("Unknown or missing profile",{profile:r,layer:this}),"mesh-pyramids")}load(e){const t=Object(a.h)(e)?e.signal:null,r=this.loadFromPortal({supportedTypes:["Scene Service"]},e).then(()=>this._fetchService(t),()=>this._fetchService(t)).then(()=>Object(y.a)([this._verifyRootNodeAndUpdateExtent(this.nodePages,t),this._setAssociatedFeatureLayer(t)])).then(()=>this._validateElevationInfo()).then(()=>this._applyAssociatedLayerOverrides()).then(()=>this._populateFieldUsageInfo()).then(()=>Object(P.a)(this,{origin:"service"},t)).then(()=>Object(b.f)(this.renderer,this.fields));return this.addResolvingPromise(r),Object(y.r)(this)}createQuery(){const e=new A.a;return"mesh"!==this.geometryType&&(e.returnGeometry=!0,e.returnZ=!0),e.where=this.definitionExpression||"1=1",e.sqlFormat="standard",e}queryExtent(e,t){return this._getAssociatedLayerForQuery().then(r=>r.queryExtent(e||this.createQuery(),t))}queryFeatureCount(e,t){return this._getAssociatedLayerForQuery().then(r=>r.queryFeatureCount(e||this.createQuery(),t))}queryFeatures(e,t){return this._getAssociatedLayerForQuery().then(r=>r.queryFeatures(e||this.createQuery(),t)).then(e=>{if(e&&e.features)for(const t of e.features)t.layer=this,t.sourceLayer=this;return e})}queryObjectIds(e,t){return this._getAssociatedLayerForQuery().then(r=>r.queryObjectIds(e||this.createQuery(),t))}getFieldUsageInfo(e){const t={supportsLabelingInfo:!1,supportsRenderer:!1,supportsPopupTemplate:!1,supportsLayerQuery:!1};return this.loaded?this._fieldUsageInfo[e]||t:(V.error("#getFieldUsageInfo()","Unavailable until layer is loaded"),t)}createPopupTemplate(e){return Object(D.a)(this,e)}_getAssociatedLayerForQuery(){const e=this.associatedLayer;return Object(a.h)(e)&&e.loaded?Object(y.r)(e):this._loadAssociatedLayerForQuery()}async _loadAssociatedLayerForQuery(){if(await this.load(),Object(a.g)(this.associatedLayer))throw new p.a("scenelayer:query-not-available","SceneLayer queries are not available without an associated feature layer",{layer:this});try{await this.associatedLayer.load()}catch(e){throw new p.a("scenelayer:query-not-available","SceneLayer associated feature layer could not be loaded",{layer:this,error:e})}return this.associatedLayer}hasCachedStatistics(e){return null!=this.statisticsInfo&&this.statisticsInfo.some(t=>t.name===e)}async queryCachedStatistics(e,t){if(await this.load(t),!this.statisticsInfo)throw new p.a("scenelayer:no-cached-statistics","Cached statistics are not available for this layer");const r=this.fieldsIndex.get(e);if(!r)throw new p.a("scenelayer:field-unexisting",`Field '${e}' does not exist on the layer`);for(const e of this.statisticsInfo)if(e.name===r.name){const r=Object(d.w)(this.parsedUrl.path,e.href);return Object(u.default)(r,{query:{f:"json"},responseType:"json",signal:t?t.signal:null}).then(e=>e.data)}throw new p.a("scenelayer:no-cached-statistics","Cached statistics for this attribute are not available")}async saveAs(e,t){return this._debouncedSaveOperations(1,{...t,getTypeKeywords:()=>this._getTypeKeywords(),portalItemLayerType:"scene"},e)}async save(){const e={getTypeKeywords:()=>this._getTypeKeywords(),portalItemLayerType:"scene"};return this._debouncedSaveOperations(0,e)}validateLayer(e){if(e.layerType&&-1===k.indexOf(e.layerType))throw new p.a("scenelayer:layer-type-not-supported","SceneLayer does not support this layer type",{layerType:e.layerType});if(isNaN(this.version.major)||isNaN(this.version.minor))throw new p.a("layer:service-version-not-supported","Service version is not supported.",{serviceVersion:this.version.versionString,supportedVersions:"1.x"});if(this.version.major>1)throw new p.a("layer:service-version-too-new","Service version is too new.",{serviceVersion:this.version.versionString,supportedVersions:"1.x"});!function(e,t){let r=!1,i=!1;if(null==e)r=!0,i=!0;else{const a=t&&t.isGeographic;switch(e){case"east-north-up":case"earth-centered":r=!0,i=a;break;case"vertex-reference-frame":r=!0,i=!a;break;default:r=!1}}if(!r)throw new p.a("scenelayer:unsupported-normal-reference-frame","Normal reference frame is invalid.");if(!i)throw new p.a("scenelayer:incompatible-normal-reference-frame","Normal reference frame is incompatible with layer spatial reference.")}(this.normalReferenceFrame,this.spatialReference)}_getTypeKeywords(){const e=[];if("points"===this.profile)e.push("Point");else{if("mesh-pyramids"!==this.profile)throw new p.a("scenelayer:unknown-profile","SceneLayer:save() encountered an unknown SceneLayer profile: "+this.profile);e.push("3DObject")}return e}_populateFieldUsageInfo(){if(this._fieldUsageInfo={},this.fields)for(const e of this.fields){const t=!(!this.attributeStorageInfo||!this.attributeStorageInfo.some(t=>t.name===e.name)),r=!!(Object(a.h)(this.associatedLayer)&&this.associatedLayer.fields&&this.associatedLayer.fields.some(t=>t&&e.name===t.name)),i={supportsLabelingInfo:t,supportsRenderer:t,supportsPopupTemplate:t||r,supportsLayerQuery:r};this._fieldUsageInfo[e.name]=i}}_applyAssociatedLayerOverrides(){if(Object(a.g)(this.associatedLayer))return;if(this.associatedLayer.fields){let e=null;for(const t of this.associatedLayer.fields)this.getField(t.name)||(e||(e=this.fields?this.fields.slice():[]),e.push(t.clone()));e&&this._set("fields",e)}const e=["popupTemplate","popupEnabled"],t=Object(s.a)(this);for(let r=0;r<e.length;r++){const i=e[r];this._buddyIsMoreImportant(i)&&(t.setDefaultOrigin(this.associatedLayer.originOf(i)),t.set(i,this.associatedLayer[i]),t.setDefaultOrigin("user"))}}async _setAssociatedFeatureLayer(e){if(-1===["mesh-pyramids","points"].indexOf(this.profile))return;const t=new q.a(this.parsedUrl,this.portalItem,e);try{this.associatedLayer=await t.fetch()}catch(e){Object(y.b)(e)||this._logWarningOnPopupEnabled()}}_logWarningOnPopupEnabled(){Object(O.j)(this,["popupTemplate","popupEnabled"],()=>this.popupEnabled&&null!=this.popupTemplate).then(()=>()=>{const e="this SceneLayer: "+this.title;null==this.attributeStorageInfo?V.warn("Associated FeatureLayer could not be loaded and no binary attributes found. Popups will not work on "+e):V.info("Associated FeatureLayer could not be loaded. Falling back to binary attributes for Popups on "+e)})}_buddyIsMoreImportant(e){if(Object(a.g)(this.associatedLayer))return!1;const t=this.originIdOf(e),r=this.associatedLayer.originIdOf(e);return null!=r&&r<=2?null==t||t<2:null!=r&&r<=3&&(null==t||t<3)}_validateElevationInfo(){const e=this.elevationInfo;e&&("mesh-pyramids"===this.profile&&"absolute-height"!==e.mode&&V.warn(".elevationInfo=","Mesh scene layers only support absolute-height elevation mode"),e.featureExpressionInfo&&"0"!==e.featureExpressionInfo.expression&&V.warn(".elevationInfo=","Scene layers do not support featureExpressionInfo"))}};Object(i.a)([Object(n.b)({types:{key:"type",base:F.a,typeMap:{selection:T.a}},json:{origins:{"web-scene":{name:"layerDefinition.featureReduction",write:!0},"portal-item":{name:"layerDefinition.featureReduction",write:!0}}}})],M.prototype,"featureReduction",void 0),Object(i.a)([Object(n.b)({type:[C],json:{read:!1,origins:{"web-scene":{name:"layerDefinition.rangeInfos",write:!0},"portal-item":{name:"layerDefinition.rangeInfos",write:!0}}}})],M.prototype,"rangeInfos",void 0),Object(i.a)([Object(n.b)({json:{read:!1}})],M.prototype,"associatedLayer",void 0),Object(i.a)([Object(n.b)({type:["show","hide"]})],M.prototype,"listMode",void 0),Object(i.a)([Object(n.b)({type:["ArcGISSceneServiceLayer"]})],M.prototype,"operationalLayerType",void 0),Object(i.a)([Object(n.b)({json:{read:!1},readOnly:!0})],M.prototype,"type",void 0),Object(i.a)([Object(n.b)({...K.fields,readOnly:!0,json:{read:!1,origins:{service:{read:!0}}}})],M.prototype,"fields",void 0),Object(i.a)([Object(n.b)({readOnly:!0,dependsOn:["fields"]})],M.prototype,"fieldsIndex",null),Object(i.a)([Object(n.b)(K.outFields)],M.prototype,"outFields",void 0),Object(i.a)([Object(n.b)({type:R.c,readOnly:!0,json:{read:!1}})],M.prototype,"nodePages",void 0),Object(i.a)([Object(l.a)("service","nodePages",["nodePages","pointNodePages"])],M.prototype,"readNodePages",null),Object(i.a)([Object(n.b)({type:[R.b],readOnly:!0})],M.prototype,"materialDefinitions",void 0),Object(i.a)([Object(n.b)({type:[R.d],readOnly:!0})],M.prototype,"textureSetDefinitions",void 0),Object(i.a)([Object(n.b)({type:[R.a],readOnly:!0})],M.prototype,"geometryDefinitions",void 0),Object(i.a)([Object(n.b)({readOnly:!0})],M.prototype,"serviceUpdateTimeStamp",void 0),Object(i.a)([Object(n.b)({readOnly:!0})],M.prototype,"attributeStorageInfo",void 0),Object(i.a)([Object(n.b)({readOnly:!0})],M.prototype,"statisticsInfo",void 0),Object(i.a)([Object(n.b)({type:String,json:{origins:{service:{read:!1,write:!1}},name:"layerDefinition.definitionExpression",write:!0}})],M.prototype,"definitionExpression",void 0),Object(i.a)([Object(n.b)({type:String,json:{origins:{"web-scene":{read:!0,write:!0}},read:!1}})],M.prototype,"path",void 0),Object(i.a)([Object(n.b)(I.b)],M.prototype,"elevationInfo",null),Object(i.a)([Object(n.b)({type:String,dependsOn:["profile"]})],M.prototype,"geometryType",null),Object(i.a)([Object(n.b)(I.c)],M.prototype,"labelsVisible",void 0),Object(i.a)([Object(n.b)({type:[_.a],json:{origins:{service:{name:"drawingInfo.labelingInfo",read:{reader:E.a},write:!1}},name:"layerDefinition.drawingInfo.labelingInfo",read:{reader:E.a},write:!0}})],M.prototype,"labelingInfo",void 0),Object(i.a)([Object(n.b)(I.d)],M.prototype,"legendEnabled",void 0),Object(i.a)([Object(n.b)(I.f)],M.prototype,"opacity",void 0),Object(i.a)([Object(n.b)({types:g.b,json:{origins:{service:{read:{source:"drawingInfo.renderer"}}},name:"layerDefinition.drawingInfo.renderer",write:!0},value:null})],M.prototype,"renderer",null),Object(i.a)([Object(n.b)({json:{read:!1}})],M.prototype,"cachedDrawingInfo",void 0),Object(i.a)([Object(l.a)("service","cachedDrawingInfo")],M.prototype,"readCachedDrawingInfo",null),Object(i.a)([Object(n.b)(I.g)],M.prototype,"popupEnabled",void 0),Object(i.a)([Object(n.b)({type:h.a,json:{name:"popupInfo",write:!0}})],M.prototype,"popupTemplate",void 0),Object(i.a)([Object(n.b)({readOnly:!0,json:{read:!1},dependsOn:["fields","title","attributeStorageInfo","associatedLayer"]})],M.prototype,"defaultPopupTemplate",null),Object(i.a)([Object(n.b)({type:String,json:{read:!1}})],M.prototype,"objectIdField",void 0),Object(i.a)([Object(l.a)("service","objectIdField",["objectIdField","fields"])],M.prototype,"readObjectIdField",null),Object(i.a)([Object(n.b)({json:{read:!1}})],M.prototype,"objectIdFilter",void 0),Object(i.a)([Object(n.b)({type:String,json:{read:!1}})],M.prototype,"profile",void 0),Object(i.a)([Object(l.a)("service","profile",["store.profile"])],M.prototype,"readProfile",null),Object(i.a)([Object(n.b)({readOnly:!0,type:String,json:{origins:{service:{read:{source:"store.normalReferenceFrame"}}},read:!1}})],M.prototype,"normalReferenceFrame",void 0),Object(i.a)([Object(n.b)(I.i)],M.prototype,"screenSizePerspectiveEnabled",void 0),M=Object(i.a)([Object(c.a)("esri.layers.SceneLayer")],M);const G={"mesh-pyramids":"mesh-pyramids",meshpyramids:"mesh-pyramids","features-meshes":"mesh-pyramids",points:"points","features-points":"points",lines:"lines","features-lines":"lines",polygons:"polygons","features-polygons":"polygons"},z={"mesh-pyramids":"mesh",points:"point",lines:"polyline",polygons:"polygon"};var W=M;t.default=W}});